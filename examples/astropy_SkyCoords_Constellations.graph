{
    "modelData": {
        "filePath": "examples/astropy_SkyCoords_Constellations.graph",
        "fileType": "Graph",
        "shortDescription": "Usage of astropy SkyCoord objects",
        "detailedDescription": "Graph initializes two SkyCoord objects and calculates the separation between the two and retrieves the constellation of one of them.",
        "repoService": "GitHub",
        "repoBranch": "main",
        "repo": "ICRAR/DALiuGEDeployGraphs",
        "generatorVersion": "v6.5.0",
        "generatorCommitHash": "22837d411f77ee0a7cb7b85cc8bcc89ca8248731",
        "generatorName": "EAGLE",
        "schemaVersion": "OJS",
        "readonly": true,
        "repositoryUrl": "",
        "commitHash": "",
        "downloadUrl": "",
        "signature": "",
        "lastModifiedName": "",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 0,
        "numLGNodes": 8
    },
    "activeGraphConfigId": "d376cf67-c4d9-404f-9b5b-4c3e40d6e9cd",
    "graphConfigurations": {
        "d376cf67-c4d9-404f-9b5b-4c3e40d6e9cd": {
            "name": "newConfig",
            "description": "",
            "nodes": {},
            "lastModifiedName": "",
            "lastModifiedEmail": "",
            "lastModifiedDatetime": 0
        }
    },
    "nodeDataArray": [
        {
            "category": "File",
            "categoryType": "Data",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "id": "d86645fa-14b8-4579-8850-81814911906f",
            "name": "Constellation",
            "description": "A standard file on a filesystem mounted to the deployment machine",
            "x": 854.303940140973,
            "y": 295.9977375940501,
            "subject": null,
            "repositoryUrl": "https://github.com/ICRAR/daliuge",
            "commitHash": "e77aaa2",
            "paletteDownloadUrl": "https://raw.githubusercontent.com/ICRAR/EAGLE_test_repo/master/daliuge/daliuge-master.palette",
            "dataHash": "aa55fb07484e66c6abd7254ca91457aefc8e39d2f3c97bff44153de2f12788d6",
            "fields": [
                {
                    "name": "persist",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Specifies whether this data component contains data that should not be deleted after execution",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "a40b8cd4-4a93-4b85-9c89-31ba465ca0bc",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "streaming",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Specifies whether this data component streams input and output data",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "d9e082b2-1d92-45ee-95e1-0d880a8c9ad4",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "83f00667-51c2-49de-a001-492beba0abd0",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "False",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "4235558a-26d2-4565-ae7c-8e9d48852b32",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "check_filepath_exists",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Perform a check to make sure the file path exists before proceeding with the application",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "2dd004d0-0a19-4c91-90cc-43014167dfb6",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "filepath",
                    "value": "Constellation.txt",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "8d3d0481-25a2-4b21-a893-07d2cd1fd173",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dummy",
                    "value": "",
                    "defaultValue": "",
                    "description": "Dummy input port",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "2acf1e56-d3c2-4717-8f78-b9c5c84b9b5d",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort"
                },
                {
                    "name": "dropclass",
                    "value": "dlg.data.drops.FileDROP",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "4e4b076f-2695-4290-93c8-adfe76253c13",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationId": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationId": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "isGroup": false,
            "color": "#00bfa6",
            "drawOrderHint": 0,
            "id": "22a2321a-b3fa-4c38-90bb-6d68b6589b37",
            "name": "SkyCoord.get_constellation",
            "description": "Determines the constellation(s) of the coordinates this SkyCoord contains.",
            "x": 728.3996236555348,
            "y": 285.7938550042941,
            "subject": null,
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e26766502aba1e0939d2294adebb59bc79d2f4de1c42fa93d32244eefba9620c",
            "fields": [
                {
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to SkyCoord.get_constellation object",
                    "readonly": false,
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "42e0f266-a830-431d-bdad-79514be2f581",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort"
                },
                {
                    "name": "short_name",
                    "value": false,
                    "defaultValue": "false",
                    "description": "bool     If True, the returned names are the IAU-sanctioned abbreviated     names.  Otherwise, full names for the constellations are used. ",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "674ba855-4cf0-49e3-b5b9-225b0d2b83d2",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort"
                },
                {
                    "name": "constellation_list",
                    "value": "iau",
                    "defaultValue": "iau",
                    "description": "str     The set of constellations to use.  Currently only ``'iau'`` is     supported, meaning the 88 \"modern\" constellations endorsed by the IAU. ",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "3845cb05-fc92-4283-8b65-70538d885cd9",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort"
                },
                {
                    "name": "const",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "utf-8",
                    "id": "47e17985-a134-4a0a-98a5-2f2ce8d41d5e",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort"
                },
                {
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "bcc59ecd-0ab7-47b5-8a0c-9a1dca842210",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "54558c24-56f3-49a5-b04d-990374f95312",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": "2",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "360f14d0-9fc3-4af4-9e66-b669b0cbfb51",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "90ee0573-9093-4801-bfbf-c0a23b950198",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.get_constellation",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.get_constellation",
                    "description": "Complete import path of function",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "5028da9e-78b1-499c-be25-28f1e72bb015",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "9213ba81-0b3e-4e3e-abbf-4194c18ddc7d",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "raw",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl",
                        "raw"
                    ],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "ae3a72a5-cb62-45cd-86fe-0c129bed5025",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "raw",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl",
                        "raw"
                    ],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "26d65f87-7437-4381-8900-6b1dcaf55dc9",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationId": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationId": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "File",
            "categoryType": "Data",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "id": "f1f681a9-8e04-4b58-8fb2-5ab317f239a2",
            "name": "separation",
            "description": "A standard file on a filesystem mounted to the deployment machine",
            "x": 855.4274524910679,
            "y": 149.8863105157472,
            "subject": null,
            "repositoryUrl": "https://github.com/ICRAR/daliuge",
            "commitHash": "d075337",
            "paletteDownloadUrl": "https://raw.githubusercontent.com/ICRAR/EAGLE-graph-repo/master/daliuge/daliuge-master.palette",
            "dataHash": "66c8e8c44691e00847d02d2707d65fbc9f5252f260afcfa1bc3bf61abb764a83",
            "fields": [
                {
                    "name": "separation",
                    "value": "",
                    "defaultValue": "",
                    "description": "Dummy port",
                    "readonly": false,
                    "type": "Object",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "utf-8",
                    "id": "824702c3-cd9a-4d48-879a-6fb820052da0",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort"
                },
                {
                    "name": "filepath",
                    "value": "Separation",
                    "defaultValue": "",
                    "description": "File path for this file. In many cases this does not need to be specified. If it has a \\/ at the end it will be treated as a directory name and the filename will be generated. If it does not have a \\/, the last part will be treated as a filename. If filepath does not start with \\/ (relative path) then the session directory will be prepended to make the path absolute.\"",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "f776086f-0ddc-4edb-8be3-1d8de12383f5",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort"
                },
                {
                    "name": "check_filepath_exists",
                    "value": false,
                    "defaultValue": "False",
                    "description": "Perform a check to make sure the file path exists before proceeding with the application",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "826fff24-4299-4383-a085-d73ebd8a5228",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dropclass",
                    "value": "dlg.data.drops.file.FileDROP",
                    "defaultValue": "dlg.data.drops.file.FileDROP",
                    "description": "Drop class",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "c242d134-8f75-4dea-8c38-4d7fac6b190c",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "base_name",
                    "value": "file",
                    "defaultValue": "file",
                    "description": "Base name of application class",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "c7fdfbdf-12e8-434e-892c-e072b42782b3",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "streaming",
                    "value": false,
                    "defaultValue": "False",
                    "description": "Specifies whether this data component streams input and output data",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "88ef6497-886f-4ec0-a60a-f192893cf4f3",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "persist",
                    "value": true,
                    "defaultValue": "True",
                    "description": "Specifies whether this data component contains data that should not be deleted after execution",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "5f9a41b6-51de-4392-aa62-8a3119ee09be",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "6bc5ed9f-1f74-4e7f-bd14-ffeaa4c247c0",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "False",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "7371f0e8-cf8c-4942-bc51-1caaf8954c0c",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationId": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationId": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "isGroup": false,
            "color": "#00bfa6",
            "drawOrderHint": 0,
            "id": "831225b2-3e95-406e-8eb1-061369779253",
            "name": "SkyCoord.separation",
            "description": "Computes on-sky separation between this coordinate and another.\n    \n    For more on how to use this (and related) functionality, see the\n    examples in :ref:`astropy-coordinates-separations-matching`.",
            "x": 708.9353271506874,
            "y": 143.64707153872297,
            "subject": null,
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e26766502aba1e0939d2294adebb59bc79d2f4de1c42fa93d32244eefba9620c",
            "fields": [
                {
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to SkyCoord object",
                    "readonly": false,
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "659c063a-20a5-4db0-9619-ba9214e6be4d",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort"
                },
                {
                    "name": "other",
                    "value": "iau",
                    "defaultValue": "iau",
                    "description": "`~astropy.coordinates.BaseCoordinateFrame` or `~astropy.coordinates.SkyCoord`     The coordinate to get the separation to. ",
                    "readonly": false,
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "84765850-2b59-46fb-856b-4cd57efbe84a",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort"
                },
                {
                    "name": "output",
                    "value": null,
                    "defaultValue": "0",
                    "description": "",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "utf-8",
                    "id": "00edde17-1c28-49d8-959e-98ccba2bd6b4",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort"
                },
                {
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "ca5ffdad-4951-41df-b71a-41861ad92923",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "4300f15d-0c10-405d-a25a-f403bc3a1b27",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": "2",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "0cf73ff6-a7d0-4cab-8eee-e0e5ebdfd168",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of cores used.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "5bf27b45-68fa-455c-8023-31626669e74f",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.separation",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.separation",
                    "description": "Complete import path of function",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "9dac90ec-84df-41a1-8857-b1dd9498cbbd",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "02d0b8cb-a167-49c9-85c2-9e727f4d9097",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "5e56d3e2-d10f-4cfc-ba14-37d5c28b6f5a",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "raw",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl",
                        "raw"
                    ],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "a2057431-b23a-4eb3-a816-090a041dc526",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationId": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationId": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "isGroup": false,
            "color": "#00bfa6",
            "drawOrderHint": 0,
            "id": "a5a4f8ad-d570-4287-a7c2-575c79efdb30",
            "name": "SkyCoord1.__init__",
            "description": "\nHigh-level object providing a flexible interface for celestial coordinate\n    representation, manipulation, and transformation between systems.\n    \n    The |SkyCoord| class accepts a wide variety of inputs for initialization. At\n    a minimum these must provide one or more celestial coordinate values with\n    unambiguous units.  Inputs may be scalars or lists/tuples/arrays, yielding\n    scalar or array coordinates (can be checked via ``SkyCoord.isscalar``).\n    Typically one also specifies the coordinate frame, though this is not\n    required. The general pattern for spherical representations is::\n    \n      SkyCoord(COORD, [FRAME], keyword_args ...)\n      SkyCoord(LON, LAT, [FRAME], keyword_args ...)\n      SkyCoord(LON, LAT, [DISTANCE], frame=FRAME, unit=UNIT, keyword_args ...)\n      SkyCoord([FRAME], <lon_attr>=LON, <lat_attr>=LAT, keyword_args ...)\n    \n    It is also possible to input coordinate values in other representations\n    such as cartesian or cylindrical.  In this case one includes the keyword\n    argument ``representation_type='cartesian'`` (for example) along with data\n    in ``x``, ``y``, and ``z``.\n    \n    See also: https://docs.astropy.org/en/stable/coordinates/\n    \n    Examples\n    --------\n    The examples below illustrate common ways of initializing a |SkyCoord|\n    object.  For a complete description of the allowed syntax see the\n    full coordinates documentation.  First some imports::\n    \n      >>> from astropy.coordinates import SkyCoord  # High-level coordinates\n      >>> from astropy.coordinates import ICRS, Galactic, FK4, FK5  # Low-level frames\n      >>> from astropy.coordinates import Angle, Latitude, Longitude  # Angles\n      >>> import astropy.units as u\n    \n    The coordinate values and frame specification can now be provided using\n    positional and keyword arguments::\n    \n      >>> c = SkyCoord(10, 20, unit=\"deg\")  # defaults to ICRS frame\n      >>> c = SkyCoord([1, 2, 3], [-30, 45, 8], frame=\"icrs\", unit=\"deg\")  # 3 coords\n    \n      >>> coords = [\"1:12:43.2 +31:12:43\", \"1 12 43.2 +31 12 43\"]\n      >>> c = SkyCoord(coords, frame=FK4, unit=(u.hourangle, u.deg), obstime=\"J1992.21\")\n    \n      >>> c = SkyCoord(\"1h12m43.2s +1d12m43s\", frame=Galactic)  # Units from string\n      >>> c = SkyCoord(frame=\"galactic\", l=\"1h12m43.2s\", b=\"+1d12m43s\")\n    \n      >>> ra = Longitude([1, 2, 3], unit=u.deg)  # Could also use Angle\n      >>> dec = np.array([4.5, 5.2, 6.3]) * u.deg  # Astropy Quantity\n      >>> c = SkyCoord(ra, dec, frame='icrs')\n      >>> c = SkyCoord(frame=ICRS, ra=ra, dec=dec, obstime='2001-01-02T12:34:56')\n    \n      >>> c = FK4(1 * u.deg, 2 * u.deg)  # Uses defaults for obstime, equinox\n      >>> c = SkyCoord(c, obstime='J2010.11', equinox='B1965')  # Override defaults\n    \n      >>> c = SkyCoord(w=0, u=1, v=2, unit='kpc', frame='galactic',\n      ...              representation_type='cartesian')\n    \n      >>> c = SkyCoord([ICRS(ra=1*u.deg, dec=2*u.deg), ICRS(ra=3*u.deg, dec=4*u.deg)])\n    \n    Velocity components (proper motions or radial velocities) can also be\n    provided in a similar manner::\n    \n      >>> c = SkyCoord(ra=1*u.deg, dec=2*u.deg, radial_velocity=10*u.km/u.s)\n    \n      >>> c = SkyCoord(ra=1*u.deg, dec=2*u.deg, pm_ra_cosdec=2*u.mas/u.yr, pm_dec=1*u.mas/u.yr)\n    \n    As shown, the frame can be a `~astropy.coordinates.BaseCoordinateFrame`\n    class or the corresponding string alias -- lower-case versions of the\n    class name that allow for creating a |SkyCoord| object and transforming\n    frames without explicitly importing the frame classes.\n    \n    Parameters\n    ----------\n    frame : `~astropy.coordinates.BaseCoordinateFrame` class or string, optional\n        Type of coordinate frame this |SkyCoord| should represent. Defaults to\n        to ICRS if not given or given as None.\n    unit : `~astropy.units.Unit`, string, or tuple of :class:`~astropy.units.Unit` or str, optional\n        Units for supplied coordinate values.\n        If only one unit is supplied then it applies to all values.\n        Note that passing only one unit might lead to unit conversion errors\n        if the coordinate values are expected to have mixed physical meanings\n        (e.g., angles and distances).\n    obstime : time-like, optional\n        Time(s) of observation.\n    equinox : time-like, optional\n        Coordinate frame equinox time.\n    representation_type : str or Representation class\n        Specifies the representation, e.g. 'spherical', 'cartesian', or\n        'cylindrical'.  This affects the positional args and other keyword args\n        which must correspond to the given representation.\n    copy : bool, optional\n        If `True` (default), a copy of any coordinate data is made.  This\n        argument can only be passed in as a keyword argument.\n    **keyword_args\n        Other keyword arguments as applicable for user-defined coordinate frames.\n        Common options include:\n    \n        ra, dec : angle-like, optional\n            RA and Dec for frames where ``ra`` and ``dec`` are keys in the\n            frame's ``representation_component_names``, including ``ICRS``,\n            ``FK5``, ``FK4``, and ``FK4NoETerms``.\n        pm_ra_cosdec, pm_dec  : `~astropy.units.Quantity` ['angular speed'], optional\n            Proper motion components, in angle per time units.\n        l, b : angle-like, optional\n            Galactic ``l`` and ``b`` for for frames where ``l`` and ``b`` are\n            keys in the frame's ``representation_component_names``, including\n            the ``Galactic`` frame.\n        pm_l_cosb, pm_b : `~astropy.units.Quantity` ['angular speed'], optional\n            Proper motion components in the `~astropy.coordinates.Galactic` frame,\n            in angle per time units.\n        x, y, z : float or `~astropy.units.Quantity` ['length'], optional\n            Cartesian coordinates values\n        u, v, w : float or `~astropy.units.Quantity` ['length'], optional\n            Cartesian coordinates values for the Galactic frame.\n        radial_velocity : `~astropy.units.Quantity` ['speed'], optional\n            The component of the velocity along the line-of-sight (i.e., the\n            radial direction), in velocity units.",
            "x": 419.7302920078098,
            "y": 83.53709607274375,
            "subject": null,
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "https://raw.githubusercontent.com/ICRAR/EAGLE-graph-repo/4d43d80fc9d2bd0156af9064aabf1b7035779f87/palettes/astropy/astropy_coordinates.palette",
            "dataHash": "b973b4a641fc8e30b71f5c22c769a7c5ebbd07db2bde52169522b2945b1114c9",
            "fields": [
                {
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to SkyCoord object",
                    "readonly": false,
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "25a3ee21-92ff-4ba2-89d6-2e328e4e64df",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort"
                },
                {
                    "name": "ra",
                    "value": "12.34deg",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "c2000ac0-5002-4cc6-be19-d3530f285b72",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort"
                },
                {
                    "name": "copy",
                    "value": true,
                    "defaultValue": "true",
                    "description": "bool, optional\n    If `True` (default), a copy of any coordinate data is made.  This\n    argument can only be passed in as a keyword argument.\n**keyword_args\n    Other keyword arguments as applicable for user-defined coordinate frames.\n    Common options include:\n\n    ra,",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "5e5ed278-bef8-4ec0-8c19-1e8f8ee1c4bb",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort"
                },
                {
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "fcf398c0-26ff-44e7-a3a1-d4d7bdb9c7b7",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "dfffc333-1f13-4db8-a09a-40a58fb7e876",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": "2",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "21aac753-e406-4d29-a0b1-dc1522d82920",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "4df32895-c1ac-49a1-8efe-931c64b18ccc",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.__init__",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.__init__",
                    "description": "Complete import path of function",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "9e61aa60-3197-4aeb-aa7a-91771ec985e2",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "90b01f70-dd16-4af6-896a-893bcfeb8f52",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "ba3c2eb5-e44b-4b64-a372-4a6f495fcf9c",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "f6b266e7-e900-4b03-af84-e501b57e8f4a",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dec",
                    "value": "34.56deg",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "2e5316fd-cab7-4536-bbb0-784fd7221963",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationId": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationId": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonObject",
            "categoryType": "Data",
            "isGroup": false,
            "color": "#00bfa6",
            "drawOrderHint": 0,
            "id": "c59ebec7-6258-4c69-9815-636a0b177fcb",
            "name": "astropy.coordinates.sky_coordinate.SkyCoord",
            "description": "Instance of astropy.coordinates.sky_coordinate.SkyCoord",
            "x": 557.4938191889325,
            "y": 128.27339775890582,
            "subject": null,
            "repositoryUrl": "",
            "commitHash": "",
            "paletteDownloadUrl": "",
            "dataHash": "",
            "fields": [
                {
                    "name": "persist",
                    "value": false,
                    "defaultValue": "False",
                    "description": "Object should be serialized",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "13363b27-cbbd-453e-a698-df2d31871ccc",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimated size of the data contained in the object",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "9d267035-bb70-47b0-bc85-f9588d52e840",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dropclass",
                    "value": "dlg.data.drops.memory.InMemoryDROP",
                    "defaultValue": "dlg.data.drops.memory.InMemoryDROP",
                    "description": "Drop class",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "dd05b917-2348-45d3-8d24-30717573e75c",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "base_name",
                    "value": "Object",
                    "defaultValue": "Object",
                    "description": "Base name of class",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "ac11f6b4-0f9b-42d2-8ac6-b14430e50617",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": true,
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "d6b3887a-fbe9-405b-8259-cbf5e0227547",
                    "parameterType": "ComponentParameter",
                    "usage": "InputOutput"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationId": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationId": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "isGroup": false,
            "color": "#00bfa6",
            "drawOrderHint": 0,
            "id": "fabd5c97-583c-40c8-8417-79f341847d75",
            "name": "SkyCoord2.__init__",
            "description": "\nHigh-level object providing a flexible interface for celestial coordinate\n    representation, manipulation, and transformation between systems.\n    \n    The |SkyCoord| class accepts a wide variety of inputs for initialization. At\n    a minimum these must provide one or more celestial coordinate values with\n    unambiguous units.  Inputs may be scalars or lists/tuples/arrays, yielding\n    scalar or array coordinates (can be checked via ``SkyCoord.isscalar``).\n    Typically one also specifies the coordinate frame, though this is not\n    required. The general pattern for spherical representations is::\n    \n      SkyCoord(COORD, [FRAME], keyword_args ...)\n      SkyCoord(LON, LAT, [FRAME], keyword_args ...)\n      SkyCoord(LON, LAT, [DISTANCE], frame=FRAME, unit=UNIT, keyword_args ...)\n      SkyCoord([FRAME], <lon_attr>=LON, <lat_attr>=LAT, keyword_args ...)\n    \n    It is also possible to input coordinate values in other representations\n    such as cartesian or cylindrical.  In this case one includes the keyword\n    argument ``representation_type='cartesian'`` (for example) along with data\n    in ``x``, ``y``, and ``z``.\n    \n    See also: https://docs.astropy.org/en/stable/coordinates/\n    \n    Examples\n    --------\n    The examples below illustrate common ways of initializing a |SkyCoord|\n    object.  For a complete description of the allowed syntax see the\n    full coordinates documentation.  First some imports::\n    \n      >>> from astropy.coordinates import SkyCoord  # High-level coordinates\n      >>> from astropy.coordinates import ICRS, Galactic, FK4, FK5  # Low-level frames\n      >>> from astropy.coordinates import Angle, Latitude, Longitude  # Angles\n      >>> import astropy.units as u\n    \n    The coordinate values and frame specification can now be provided using\n    positional and keyword arguments::\n    \n      >>> c = SkyCoord(10, 20, unit=\"deg\")  # defaults to ICRS frame\n      >>> c = SkyCoord([1, 2, 3], [-30, 45, 8], frame=\"icrs\", unit=\"deg\")  # 3 coords\n    \n      >>> coords = [\"1:12:43.2 +31:12:43\", \"1 12 43.2 +31 12 43\"]\n      >>> c = SkyCoord(coords, frame=FK4, unit=(u.hourangle, u.deg), obstime=\"J1992.21\")\n    \n      >>> c = SkyCoord(\"1h12m43.2s +1d12m43s\", frame=Galactic)  # Units from string\n      >>> c = SkyCoord(frame=\"galactic\", l=\"1h12m43.2s\", b=\"+1d12m43s\")\n    \n      >>> ra = Longitude([1, 2, 3], unit=u.deg)  # Could also use Angle\n      >>> dec = np.array([4.5, 5.2, 6.3]) * u.deg  # Astropy Quantity\n      >>> c = SkyCoord(ra, dec, frame='icrs')\n      >>> c = SkyCoord(frame=ICRS, ra=ra, dec=dec, obstime='2001-01-02T12:34:56')\n    \n      >>> c = FK4(1 * u.deg, 2 * u.deg)  # Uses defaults for obstime, equinox\n      >>> c = SkyCoord(c, obstime='J2010.11', equinox='B1965')  # Override defaults\n    \n      >>> c = SkyCoord(w=0, u=1, v=2, unit='kpc', frame='galactic',\n      ...              representation_type='cartesian')\n    \n      >>> c = SkyCoord([ICRS(ra=1*u.deg, dec=2*u.deg), ICRS(ra=3*u.deg, dec=4*u.deg)])\n    \n    Velocity components (proper motions or radial velocities) can also be\n    provided in a similar manner::\n    \n      >>> c = SkyCoord(ra=1*u.deg, dec=2*u.deg, radial_velocity=10*u.km/u.s)\n    \n      >>> c = SkyCoord(ra=1*u.deg, dec=2*u.deg, pm_ra_cosdec=2*u.mas/u.yr, pm_dec=1*u.mas/u.yr)\n    \n    As shown, the frame can be a `~astropy.coordinates.BaseCoordinateFrame`\n    class or the corresponding string alias -- lower-case versions of the\n    class name that allow for creating a |SkyCoord| object and transforming\n    frames without explicitly importing the frame classes.\n    \n    Parameters\n    ----------\n    frame : `~astropy.coordinates.BaseCoordinateFrame` class or string, optional\n        Type of coordinate frame this |SkyCoord| should represent. Defaults to\n        to ICRS if not given or given as None.\n    unit : `~astropy.units.Unit`, string, or tuple of :class:`~astropy.units.Unit` or str, optional\n        Units for supplied coordinate values.\n        If only one unit is supplied then it applies to all values.\n        Note that passing only one unit might lead to unit conversion errors\n        if the coordinate values are expected to have mixed physical meanings\n        (e.g., angles and distances).\n    obstime : time-like, optional\n        Time(s) of observation.\n    equinox : time-like, optional\n        Coordinate frame equinox time.\n    representation_type : str or Representation class\n        Specifies the representation, e.g. 'spherical', 'cartesian', or\n        'cylindrical'.  This affects the positional args and other keyword args\n        which must correspond to the given representation.\n    copy : bool, optional\n        If `True` (default), a copy of any coordinate data is made.  This\n        argument can only be passed in as a keyword argument.\n    **keyword_args\n        Other keyword arguments as applicable for user-defined coordinate frames.\n        Common options include:\n    \n        ra, dec : angle-like, optional\n            RA and Dec for frames where ``ra`` and ``dec`` are keys in the\n            frame's ``representation_component_names``, including ``ICRS``,\n            ``FK5``, ``FK4``, and ``FK4NoETerms``.\n        pm_ra_cosdec, pm_dec  : `~astropy.units.Quantity` ['angular speed'], optional\n            Proper motion components, in angle per time units.\n        l, b : angle-like, optional\n            Galactic ``l`` and ``b`` for for frames where ``l`` and ``b`` are\n            keys in the frame's ``representation_component_names``, including\n            the ``Galactic`` frame.\n        pm_l_cosb, pm_b : `~astropy.units.Quantity` ['angular speed'], optional\n            Proper motion components in the `~astropy.coordinates.Galactic` frame,\n            in angle per time units.\n        x, y, z : float or `~astropy.units.Quantity` ['length'], optional\n            Cartesian coordinates values\n        u, v, w : float or `~astropy.units.Quantity` ['length'], optional\n            Cartesian coordinates values for the Galactic frame.\n        radial_velocity : `~astropy.units.Quantity` ['speed'], optional\n            The component of the velocity along the line-of-sight (i.e., the\n            radial direction), in velocity units.",
            "x": 433.5462165862697,
            "y": 207.88041727887935,
            "subject": null,
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "https://raw.githubusercontent.com/ICRAR/EAGLE-graph-repo/4d43d80fc9d2bd0156af9064aabf1b7035779f87/palettes/astropy/astropy_coordinates.palette",
            "dataHash": "b973b4a641fc8e30b71f5c22c769a7c5ebbd07db2bde52169522b2945b1114c9",
            "fields": [
                {
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to SkyCoord object",
                    "readonly": false,
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "f80b26a1-3c75-48c2-874c-9cf43f89e534",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort"
                },
                {
                    "name": "ra",
                    "value": "23.45deg",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "f0ee755a-a264-421d-ab0d-a5c40a62ca30",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort"
                },
                {
                    "name": "copy",
                    "value": true,
                    "defaultValue": "true",
                    "description": "bool, optional\n    If `True` (default), a copy of any coordinate data is made.  This\n    argument can only be passed in as a keyword argument.\n**keyword_args\n    Other keyword arguments as applicable for user-defined coordinate frames.\n    Common options include:\n\n    ra,",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "97300f35-30ef-4c2a-8297-72452a5f65de",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort"
                },
                {
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "4e4bf174-2b5f-4303-a731-43282c4814cc",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "6314f7f9-a69c-4d77-848b-f46eb27e9d63",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": "2",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "c6618f0b-53f2-4e3d-ae85-c0096a54d55d",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "721b691c-60e8-4818-a89c-385101a713bd",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.__init__",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.__init__",
                    "description": "Complete import path of function",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "a17f1893-84b3-4bf5-80c7-cc12c268576d",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "b42d99ae-3f83-4199-9324-c65fc7a16933",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "1898bbbe-5bc2-48af-a46d-c8027b5dcc0e",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "a80685b0-7e8d-4177-a1c5-2bd0bef3e203",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dec",
                    "value": "-23.45deg",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "add689ce-d4a1-44c1-a432-2942d4dcd604",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationId": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationId": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonObject",
            "categoryType": "Data",
            "isGroup": false,
            "color": "#00bfa6",
            "drawOrderHint": 0,
            "id": "68b4afc2-a9a7-4eb4-b545-df2939aa4189",
            "name": "astropy.coordinates.sky_coordinate.SkyCoord",
            "description": "Instance of astropy.coordinates.sky_coordinate.SkyCoord",
            "x": 586.0467299844158,
            "y": 240.6429176637096,
            "subject": null,
            "repositoryUrl": "",
            "commitHash": "",
            "paletteDownloadUrl": "",
            "dataHash": "",
            "fields": [
                {
                    "name": "persist",
                    "value": false,
                    "defaultValue": "False",
                    "description": "Object should be serialized",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "5c54485e-1ccc-4cac-af8b-5cc7367b3f7a",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimated size of the data contained in the object",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "7aa6a748-1fdd-453c-b83d-8a1d1391b170",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "dropclass",
                    "value": "dlg.data.drops.memory.InMemoryDROP",
                    "defaultValue": "dlg.data.drops.memory.InMemoryDROP",
                    "description": "Drop class",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "26523d57-4ad0-4ddb-bca3-90cc344779c8",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "base_name",
                    "value": "Object",
                    "defaultValue": "Object",
                    "description": "Base name of class",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "361ad3ac-03d6-4da4-9abd-0aa9c8d6a31a",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort"
                },
                {
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": true,
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "precious": false,
                    "options": [],
                    "positional": false,
                    "encoding": "pickle",
                    "id": "4135d9be-429b-43cc-8ffe-8e61db9f4bff",
                    "parameterType": "ComponentParameter",
                    "usage": "InputOutput"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationId": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationId": null,
            "outputApplicationDescription": ""
        }
    ],
    "linkDataArray": [
        {
            "from": "22a2321a-b3fa-4c38-90bb-6d68b6589b37",
            "fromPort": "47e17985-a134-4a0a-98a5-2f2ce8d41d5e",
            "to": "d86645fa-14b8-4579-8850-81814911906f",
            "toPort": "2acf1e56-d3c2-4717-8f78-b9c5c84b9b5d",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": "831225b2-3e95-406e-8eb1-061369779253",
            "fromPort": "00edde17-1c28-49d8-959e-98ccba2bd6b4",
            "to": "f1f681a9-8e04-4b58-8fb2-5ab317f239a2",
            "toPort": "824702c3-cd9a-4d48-879a-6fb820052da0",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": "a5a4f8ad-d570-4287-a7c2-575c79efdb30",
            "fromPort": "25a3ee21-92ff-4ba2-89d6-2e328e4e64df",
            "to": "c59ebec7-6258-4c69-9815-636a0b177fcb",
            "toPort": "d6b3887a-fbe9-405b-8259-cbf5e0227547",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": "c59ebec7-6258-4c69-9815-636a0b177fcb",
            "fromPort": "d6b3887a-fbe9-405b-8259-cbf5e0227547",
            "to": "831225b2-3e95-406e-8eb1-061369779253",
            "toPort": "659c063a-20a5-4db0-9619-ba9214e6be4d",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": "fabd5c97-583c-40c8-8417-79f341847d75",
            "fromPort": "f80b26a1-3c75-48c2-874c-9cf43f89e534",
            "to": "68b4afc2-a9a7-4eb4-b545-df2939aa4189",
            "toPort": "4135d9be-429b-43cc-8ffe-8e61db9f4bff",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": "68b4afc2-a9a7-4eb4-b545-df2939aa4189",
            "fromPort": "4135d9be-429b-43cc-8ffe-8e61db9f4bff",
            "to": "22a2321a-b3fa-4c38-90bb-6d68b6589b37",
            "toPort": "42e0f266-a830-431d-bdad-79514be2f581",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": "68b4afc2-a9a7-4eb4-b545-df2939aa4189",
            "fromPort": "4135d9be-429b-43cc-8ffe-8e61db9f4bff",
            "to": "831225b2-3e95-406e-8eb1-061369779253",
            "toPort": "84765850-2b59-46fb-856b-4cd57efbe84a",
            "loop_aware": "0",
            "closesLoop": false
        }
    ]
}